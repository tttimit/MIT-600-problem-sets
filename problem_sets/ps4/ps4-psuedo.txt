Your algorithms should be plain English explanations for the steps your program will take to solve these problems.

Write out your algorithm for Problem 2 here:
输入：合法单词表(word_list)，密文(text)
输出：偏移(shift)

def get_shift(word_list, text):
	初始化变量max和shift为0，max代表当前明文中合法单词数目的最大值，shift为对应max的偏移量
	执行循环，起始值i=1，终止值i=26，每次i增加1：
		用i作为偏移，解密密文，得到明文
		计算明文中合法单词的数目n
		如果n大于max：
			max = n，shift = i
	返回shift

	
Write out your algorithm for Problem 4 here:
输入：合法单词表(word_list)，密文(text)
输出：偏移表(shifts)(一个List，其中每个元素为tuple(location, shift))

HINT：为了简化问题，约定了shift只能开始于一个单词的开头。也就是说，如果某个shift是正确的，那么到下一个单词
的开始之前都可以确保是正确的。另外，建议使用递归来解决。

def find_best_shifts(wordlist, text):
	结果list(shifts)初始化为空
	位置指示符s设置为0
	执行循环 i 从 0 到 27：
		对text[s:]执行偏移 i
		如果偏移后的text中有空格：
			从s位置到空格之间的单词是一个合法的word：
				s设置为空格的位置
				将位置和shift保存的结果list中
			不是合法的word，说明偏移量不对，进行下一个循环
		没有空格，说明shift的不合适，所以执行下一次循环